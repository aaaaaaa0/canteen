from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from database.db_requests import get_menu_sections, get_products_by_menu_section

import logging
logging.basicConfig(level=logging.INFO, format="%(asctime)s [%(levelname)s] %(name)s: %(message)s")


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
main_keyboard = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='–ú–µ–Ω—é')], [KeyboardButton(text='–ö–æ—Ä–∑–∏–Ω–∞')],[KeyboardButton(text='–î–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–∫–∞–∑–∞')],],resize_keyboard=True)


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ [–°–î–ï–õ–ê–¢–¨ –ó–ê–ö–ê–ó]
make_order_kb = InlineKeyboardMarkup(
    inline_keyboard=[[InlineKeyboardButton(text="–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑", callback_data="make_order")]])


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤–º–µ—Å—Ç–µ —Å –ø–æ–ª–Ω–æ–π –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
confirm_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="üîÑ –ò–ó–ú–ï–ù–ò–¢–¨", callback_data="edit_contact_info"),
            InlineKeyboardButton(text="‚úÖ –ü–û–î–¢–í–ï–†–î–ò–¢–¨", callback_data="confirm_contact_info"),
        ]
    ]
)


reconfirm_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="üîÑ –ò–ó–ú–ï–ù–ò–¢–¨", callback_data="edit_contact_info"),
            InlineKeyboardButton(text="‚úÖ –ü–û–î–¢–í–ï–†–î–ò–¢–¨", callback_data="confirm_order"),
        ]
    ]
)



# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É [–ò–ó–ú–ï–ù–ò–¢–¨] –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
# –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–∑–º–µ–Ω–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
edit_fields_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –§–ò–û", callback_data="edit_name")],
        [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", callback_data="edit_phone")],
        [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–Ω–∏—Ç—å –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏", callback_data="edit_address")],
    ]
)


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–∞–∑–¥–µ–ª–∞ –º–µ–Ω—é
async def menu_sections(menu_section_id=None):
    all_menu_sections = await get_menu_sections()  
    keyboard = InlineKeyboardBuilder()
    
    for menu_section in all_menu_sections:
        cb_data = f"menu_section_{menu_section.id}"
        keyboard.add(
            InlineKeyboardButton(
                text=menu_section.name,
                callback_data=cb_data
            )
        )
    
    return keyboard.adjust(2).as_markup()


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –±–ª—é–¥–∞ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–µ–Ω—é
async def products(menu_section_id):
    all_products = await get_products_by_menu_section(menu_section_id)
    keyboard = InlineKeyboardBuilder()

    for product in all_products:
        cb_data = f"product_{product.id}"
        keyboard.add(
            InlineKeyboardButton(
                text=product.name,
                callback_data=cb_data
            )
        )
    keyboard.add(
        InlineKeyboardButton(
            text='‚¨ÖÔ∏è',
            callback_data='to_section_menu'
        )
    )
    
    return keyboard.adjust(1).as_markup()

